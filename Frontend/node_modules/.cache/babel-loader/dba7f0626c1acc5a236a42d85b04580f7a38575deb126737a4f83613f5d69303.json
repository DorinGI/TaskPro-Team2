{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport authReducer from './auth/authSlice.js';\nimport boardsReducer from './boardsSlice.js';\nconst initialState = {\n  theme: 'Light'\n};\nconst themeReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_THEME':\n      return {\n        ...state,\n        theme: action.payload\n      };\n    default:\n      return state;\n  }\n};\nexport const store = configureStore({\n  reducer: {\n    auth: authReducer,\n    theme: themeReducer,\n    boards: boardsReducer\n  }\n});","map":{"version":3,"names":["configureStore","authReducer","boardsReducer","initialState","theme","themeReducer","state","action","type","payload","store","reducer","auth","boards"],"sources":["C:/TaskPro-Team2/Frontend/src/redux/store.js"],"sourcesContent":["import { configureStore } from '@reduxjs/toolkit';\r\nimport authReducer from './auth/authSlice.js';\r\nimport boardsReducer from './boardsSlice.js';\r\n\r\nconst initialState = {\r\n  theme: 'Light',\r\n};\r\n\r\nconst themeReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'SET_THEME':\r\n      return { ...state, theme: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    auth: authReducer,\r\n    theme: themeReducer,\r\n    boards: boardsReducer,\r\n  },\r\n});\r\n"],"mappings":"AAAA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,WAAW,MAAM,qBAAqB;AAC7C,OAAOC,aAAa,MAAM,kBAAkB;AAE5C,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,YAAY,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,WAAW;MACd,OAAO;QAAE,GAAGF,KAAK;QAAEF,KAAK,EAAEG,MAAM,CAACE;MAAQ,CAAC;IAC5C;MACE,OAAOH,KAAK;EAChB;AACF,CAAC;AAED,OAAO,MAAMI,KAAK,GAAGV,cAAc,CAAC;EAClCW,OAAO,EAAE;IACPC,IAAI,EAAEX,WAAW;IACjBG,KAAK,EAAEC,YAAY;IACnBQ,MAAM,EAAEX;EACV;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}