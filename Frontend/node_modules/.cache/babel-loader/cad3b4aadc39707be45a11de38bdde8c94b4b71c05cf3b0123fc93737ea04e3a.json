{"ast":null,"code":"var _jsxFileName = \"C:\\\\TaskPro-Team2\\\\Frontend\\\\src\\\\components\\\\Sidebar.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchBoards, saveBoard, deleteBoard } from '../redux/boardsSlice';\nimport { logout } from '../redux/auth/authSlice';\nimport sprite from '../assets/sprite.svg';\nimport styles from './Sidebar.module.css';\nimport CreateBoardModal from './CreateBoardModal';\nimport HelpModal from './HelpModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Sidebar = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\n  const {\n    boards,\n    loading\n  } = useSelector(state => state.boards);\n  const [selectedBoard, setSelectedBoard] = useState(null);\n  useEffect(() => {\n    dispatch(fetchBoards());\n  }, [dispatch]);\n  const toggleModal = modalName => {\n    if (modalName === 'create') {\n      setIsModalOpen(true);\n    } else if (modalName === 'help') {\n      setIsHelpModalOpen(true);\n    }\n  };\n  const closeModal = modalName => {\n    if (modalName === 'create') {\n      setIsModalOpen(false);\n    } else if (modalName === 'help') {\n      setIsHelpModalOpen(false);\n    }\n  };\n\n  //   const handleCreateBoard = values => {\n  //     console.log('Board created ', values);\n  //     closeModal('create');\n  //   };\n  const handleLogout = async () => {\n    await dispatch(logout());\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: styles.sidebar,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Boards\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.boardHeader,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: styles.createBoardText,\n        children: \"Create New Board\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.plusButton,\n        onClick: () => setIsModalOpen(true),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: styles.boardList,\n      children: boards.map(board => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: styles.boardItem,\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: styles.boardIcon,\n          \"aria-hidden\": \"true\",\n          children: /*#__PURE__*/_jsxDEV(\"use\", {\n            xlinkHref: `${sprite}#${board.icon}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: styles.boardTitle,\n          children: board.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.editButton,\n          onClick: () => {\n            setSelectedBoard(board);\n            setIsModalOpen(true);\n          },\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: styles.boardButtonIcon,\n            \"aria-hidden\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: `${sprite}#icon-pencil`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.deleteButton,\n          onClick: () => dispatch(deleteBoard(board._id)),\n          children: /*#__PURE__*/_jsxDEV(\"svg\", {\n            className: styles.boardButtonIcon,\n            \"aria-hidden\": \"true\",\n            children: /*#__PURE__*/_jsxDEV(\"use\", {\n              xlinkHref: `${sprite}#icon-trash`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this)]\n      }, board.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.needHelp,\n      onClick: () => toggleModal('help'),\n      children: \"Need Help?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.logout,\n      onClick: handleLogout,\n      children: \"Log Out\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CreateBoardModal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      onCreate: values => dispatch(saveBoard(values)),\n      board: selectedBoard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HelpModal, {\n      isOpen: isHelpModalOpen,\n      onClose: () => closeModal('help')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"8OVWOevms1khL0fzbh8ipxMjJ1A=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useEffect","useState","useDispatch","useSelector","fetchBoards","saveBoard","deleteBoard","logout","sprite","styles","CreateBoardModal","HelpModal","jsxDEV","_jsxDEV","Sidebar","_s","dispatch","isModalOpen","setIsModalOpen","isHelpModalOpen","setIsHelpModalOpen","boards","loading","state","selectedBoard","setSelectedBoard","toggleModal","modalName","closeModal","handleLogout","className","sidebar","children","fileName","_jsxFileName","lineNumber","columnNumber","boardHeader","createBoardText","plusButton","onClick","boardList","map","board","boardItem","boardIcon","xlinkHref","icon","boardTitle","title","editButton","boardButtonIcon","deleteButton","_id","id","needHelp","isOpen","onClose","onCreate","values","_c","$RefreshReg$"],"sources":["C:/TaskPro-Team2/Frontend/src/components/Sidebar.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchBoards, saveBoard, deleteBoard } from '../redux/boardsSlice';\r\nimport { logout } from '../redux/auth/authSlice';\r\nimport sprite from '../assets/sprite.svg';\r\nimport styles from './Sidebar.module.css';\r\nimport CreateBoardModal from './CreateBoardModal';\r\nimport HelpModal from './HelpModal';\r\n\r\nconst Sidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const [isModalOpen, setIsModalOpen] = useState(false);\r\n  const [isHelpModalOpen, setIsHelpModalOpen] = useState(false);\r\n  const { boards, loading } = useSelector(state => state.boards);\r\n  const [selectedBoard, setSelectedBoard] = useState(null);\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchBoards());\r\n  }, [dispatch]);\r\n\r\n  const toggleModal = modalName => {\r\n    if (modalName === 'create') {\r\n      setIsModalOpen(true);\r\n    } else if (modalName === 'help') {\r\n      setIsHelpModalOpen(true);\r\n    }\r\n  };\r\n\r\n  const closeModal = modalName => {\r\n    if (modalName === 'create') {\r\n      setIsModalOpen(false);\r\n    } else if (modalName === 'help') {\r\n      setIsHelpModalOpen(false);\r\n    }\r\n  };\r\n\r\n  //   const handleCreateBoard = values => {\r\n  //     console.log('Board created ', values);\r\n  //     closeModal('create');\r\n  //   };\r\n  const handleLogout = async () => {\r\n    await dispatch(logout());\r\n  };\r\n  return (\r\n    <aside className={styles.sidebar}>\r\n      <h2>My Boards</h2>\r\n      <div className={styles.boardHeader}>\r\n        <span className={styles.createBoardText}>Create New Board</span>\r\n        <button\r\n          className={styles.plusButton}\r\n          onClick={() => setIsModalOpen(true)}\r\n        >\r\n          +\r\n        </button>\r\n      </div>\r\n      {loading && <p>Loading...</p>}\r\n      <ul className={styles.boardList}>\r\n        {boards.map(board => (\r\n          <li key={board.id} className={styles.boardItem}>\r\n            <svg className={styles.boardIcon} aria-hidden=\"true\">\r\n              <use xlinkHref={`${sprite}#${board.icon}`} />\r\n            </svg>\r\n            <span className={styles.boardTitle}>{board.title}</span>\r\n            <button\r\n              className={styles.editButton}\r\n              onClick={() => {\r\n                setSelectedBoard(board);\r\n                setIsModalOpen(true);\r\n              }}\r\n            >\r\n              <svg className={styles.boardButtonIcon} aria-hidden=\"true\">\r\n                <use xlinkHref={`${sprite}#icon-pencil`} />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className={styles.deleteButton}\r\n              onClick={() => dispatch(deleteBoard(board._id))}\r\n            >\r\n              <svg className={styles.boardButtonIcon} aria-hidden=\"true\">\r\n                <use xlinkHref={`${sprite}#icon-trash`} />\r\n              </svg>\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button className={styles.needHelp} onClick={() => toggleModal('help')}>\r\n        Need Help?\r\n      </button>\r\n      <button className={styles.logout} onClick={handleLogout}>\r\n        Log Out\r\n      </button>\r\n\r\n      <CreateBoardModal\r\n        isOpen={isModalOpen}\r\n        onClose={() => setIsModalOpen(false)}\r\n        onCreate={values => dispatch(saveBoard(values))}\r\n        board={selectedBoard}\r\n      />\r\n      <HelpModal isOpen={isHelpModalOpen} onClose={() => closeModal('help')} />\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}