{"ast":null,"code":"var _jsxFileName = \"C:\\\\TaskPro-Team2\\\\Frontend\\\\src\\\\components\\\\HelpModal.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport { useFormik } from \"formik\";\nimport * as Yup from \"yup\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./HelpModal.module.css\";\nimport Modal from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HelpModal = ({\n  isOpen,\n  onClose\n}) => {\n  _s();\n  const [userEmail, setUserEmail] = useState(\"\");\n  const formik = useFormik({\n    initialValues: {\n      email: userEmail || \"\",\n      comment: \"\"\n    },\n    validationSchema: Yup.object({\n      email: Yup.string().email(\"Invalid email address\").required(\"Email is required\"),\n      comment: Yup.string().required(\"Message is required\").min(10, \"Message must be at least 10 characters\")\n    }),\n    onSubmit: values => {\n      // Aici poți trimite cererea către server\n      console.log(\"Form submitted:\", values);\n      // De exemplu, trimite cererea la server:\n      // axios.post('/api/help', values);\n      onClose(); // Închide modalul după trimiterea formularului\n    }\n  });\n\n  // Funcția de succes pentru Google Login\n  const handleLoginSuccess = response => {\n    var _response$credential;\n    const email = response === null || response === void 0 ? void 0 : (_response$credential = response.credential) === null || _response$credential === void 0 ? void 0 : _response$credential.email;\n    setUserEmail(email); // Setează email-ul utilizatorului în state pentru a-l pre-popula în formular\n  };\n\n  // Funcția de eșec pentru Google Login\n  const handleLoginFailure = error => {\n    console.log(\"Login failed:\", error);\n  };\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    isOpen: isOpen,\n    onClose: onClose,\n    title: \"Need Help?\",\n    className: styles.helpModal,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          name: \"email\",\n          placeholder: \"Email address\",\n          value: formik.values.email,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          className: formik.touched.email && formik.errors.email ? \"error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), formik.touched.email && formik.errors.email ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: formik.errors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputGroup,\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"comment\",\n          name: \"comment\",\n          placeholder: \"Comment\",\n          value: formik.values.comment,\n          onChange: formik.handleChange,\n          onBlur: formik.handleBlur,\n          className: formik.touched.comment && formik.errors.comment ? \"error\" : \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), formik.touched.comment && formik.errors.comment ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-comment\",\n          children: formik.errors.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.submitButton,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(HelpModal, \"4CU0JKrdVcHrwlgdMpCt3ug5Sh4=\", false, function () {\n  return [useFormik];\n});\n_c = HelpModal;\nHelpModal.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default HelpModal;\nvar _c;\n$RefreshReg$(_c, \"HelpModal\");","map":{"version":3,"names":["useState","useFormik","Yup","PropTypes","styles","Modal","jsxDEV","_jsxDEV","HelpModal","isOpen","onClose","_s","userEmail","setUserEmail","formik","initialValues","email","comment","validationSchema","object","string","required","min","onSubmit","values","console","log","handleLoginSuccess","response","_response$credential","credential","handleLoginFailure","error","title","className","helpModal","children","handleSubmit","inputGroup","type","id","name","placeholder","value","onChange","handleChange","onBlur","handleBlur","touched","errors","fileName","_jsxFileName","lineNumber","columnNumber","submitButton","_c","propTypes","bool","isRequired","func","$RefreshReg$"],"sources":["C:/TaskPro-Team2/Frontend/src/components/HelpModal.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport { useFormik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"./HelpModal.module.css\";\r\nimport Modal from \"./Modal\";\r\n\r\nconst HelpModal = ({ isOpen, onClose }) => {\r\n  const [userEmail, setUserEmail] = useState(\"\");\r\n\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      email: userEmail || \"\",\r\n      comment: \"\",\r\n    },\r\n    validationSchema: Yup.object({\r\n      email: Yup.string()\r\n        .email(\"Invalid email address\")\r\n        .required(\"Email is required\"),\r\n      comment: Yup.string()\r\n        .required(\"Message is required\")\r\n        .min(10, \"Message must be at least 10 characters\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      // Aici poți trimite cererea către server\r\n      console.log(\"Form submitted:\", values);\r\n      // De exemplu, trimite cererea la server:\r\n      // axios.post('/api/help', values);\r\n      onClose(); // Închide modalul după trimiterea formularului\r\n    },\r\n  });\r\n\r\n  // Funcția de succes pentru Google Login\r\n  const handleLoginSuccess = (response) => {\r\n    const email = response?.credential?.email;\r\n    setUserEmail(email); // Setează email-ul utilizatorului în state pentru a-l pre-popula în formular\r\n  };\r\n\r\n  // Funcția de eșec pentru Google Login\r\n  const handleLoginFailure = (error) => {\r\n    console.log(\"Login failed:\", error);\r\n  };\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      onClose={onClose}\r\n      title=\"Need Help?\"\r\n      className={styles.helpModal}\r\n    >\r\n      <form onSubmit={formik.handleSubmit}>\r\n        {/* Câmpul pentru email */}\r\n        <div className={styles.inputGroup}>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            name=\"email\"\r\n            placeholder=\"Email address\"\r\n            value={formik.values.email}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            className={\r\n              formik.touched.email && formik.errors.email ? \"error\" : \"\"\r\n            }\r\n          />\r\n          {formik.touched.email && formik.errors.email ? (\r\n            <div className=\"error-message\">{formik.errors.email}</div>\r\n          ) : null}\r\n        </div>\r\n\r\n        {/* Câmpul pentru mesaj */}\r\n        <div className={styles.inputGroup}>\r\n          <textarea\r\n            id=\"comment\"\r\n            name=\"comment\"\r\n            placeholder=\"Comment\"\r\n            value={formik.values.comment}\r\n            onChange={formik.handleChange}\r\n            onBlur={formik.handleBlur}\r\n            className={\r\n              formik.touched.comment && formik.errors.comment ? \"error\" : \"\"\r\n            }\r\n          />\r\n          {formik.touched.comment && formik.errors.comment ? (\r\n            <div className=\"error-comment\">{formik.errors.comment}</div>\r\n          ) : null}\r\n        </div>\r\n\r\n        <button type=\"submit\" className={styles.submitButton}>\r\n          Send\r\n        </button>\r\n      </form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nHelpModal.propTypes = {\r\n  isOpen: PropTypes.bool.isRequired,\r\n  onClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default HelpModal;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}