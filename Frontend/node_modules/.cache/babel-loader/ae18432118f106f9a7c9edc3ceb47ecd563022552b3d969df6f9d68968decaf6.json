{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport axiosInstance from '../api/axiosInstance.js';\n\n// Fetch boards from backend\nexport const fetchBoards = createAsyncThunk('boards/fetchBoards', async () => {\n  const response = await axiosInstance.get('/boards');\n  return response.data;\n});\n\n// Create or edit a board\nexport const saveBoard = createAsyncThunk('boards/saveBoard', async board => {\n  const response = board.id ? await axiosInstance.put(`/boards/${board.id}`, board) // Edit\n  : await axiosInstance.post('/boards', board); // Create\n  return response.data;\n});\n\n// Delete a board\nexport const deleteBoard = createAsyncThunk('boards/deleteBoard', async id => {\n  await axiosInstance.delete(`/boards/${id}`);\n  return id;\n});\nconst boardsSlice = createSlice({\n  name: 'boards',\n  initialState: {\n    boards: [],\n    loading: false,\n    error: null\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchBoards.pending, state => {\n      state.loading = true;\n    }).addCase(fetchBoards.fulfilled, (state, action) => {\n      state.loading = false;\n      state.boards = action.payload;\n    }).addCase(fetchBoards.rejected, (state, action) => {\n      state.loading = false;\n      state.error = action.error.message;\n    }).addCase(saveBoard.fulfilled, (state, action) => {\n      const existingIndex = state.boards.findIndex(b => b.id === action.payload.id);\n      if (existingIndex !== -1) {\n        state.boards[existingIndex] = action.payload;\n      } else {\n        state.boards.push(action.payload);\n      }\n    }).addCase(deleteBoard.fulfilled, (state, action) => {\n      state.boards = state.boards.filter(b => b.id !== action.payload);\n    });\n  }\n});\nexport default boardsSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axiosInstance","fetchBoards","response","get","data","saveBoard","board","id","put","post","deleteBoard","delete","boardsSlice","name","initialState","boards","loading","error","reducers","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","rejected","message","existingIndex","findIndex","b","push","filter","reducer"],"sources":["C:/TaskPro-Team2/Frontend/src/redux/boardsSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport axiosInstance from '../api/axiosInstance.js';\r\n\r\n// Fetch boards from backend\r\nexport const fetchBoards = createAsyncThunk('boards/fetchBoards', async () => {\r\n  const response = await axiosInstance.get('/boards');\r\n  return response.data;\r\n});\r\n\r\n// Create or edit a board\r\nexport const saveBoard = createAsyncThunk('boards/saveBoard', async board => {\r\n  const response = board.id\r\n    ? await axiosInstance.put(`/boards/${board.id}`, board) // Edit\r\n    : await axiosInstance.post('/boards', board); // Create\r\n  return response.data;\r\n});\r\n\r\n// Delete a board\r\nexport const deleteBoard = createAsyncThunk('boards/deleteBoard', async id => {\r\n  await axiosInstance.delete(`/boards/${id}`);\r\n  return id;\r\n});\r\n\r\nconst boardsSlice = createSlice({\r\n  name: 'boards',\r\n  initialState: {\r\n    boards: [],\r\n    loading: false,\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: builder => {\r\n    builder\r\n      .addCase(fetchBoards.pending, state => {\r\n        state.loading = true;\r\n      })\r\n      .addCase(fetchBoards.fulfilled, (state, action) => {\r\n        state.loading = false;\r\n        state.boards = action.payload;\r\n      })\r\n      .addCase(fetchBoards.rejected, (state, action) => {\r\n        state.loading = false;\r\n        state.error = action.error.message;\r\n      })\r\n      .addCase(saveBoard.fulfilled, (state, action) => {\r\n        const existingIndex = state.boards.findIndex(\r\n          b => b.id === action.payload.id\r\n        );\r\n        if (existingIndex !== -1) {\r\n          state.boards[existingIndex] = action.payload;\r\n        } else {\r\n          state.boards.push(action.payload);\r\n        }\r\n      })\r\n      .addCase(deleteBoard.fulfilled, (state, action) => {\r\n        state.boards = state.boards.filter(b => b.id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default boardsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,aAAa,MAAM,yBAAyB;;AAEnD;AACA,OAAO,MAAMC,WAAW,GAAGF,gBAAgB,CAAC,oBAAoB,EAAE,YAAY;EAC5E,MAAMG,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAG,CAAC,SAAS,CAAC;EACnD,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,SAAS,GAAGN,gBAAgB,CAAC,kBAAkB,EAAE,MAAMO,KAAK,IAAI;EAC3E,MAAMJ,QAAQ,GAAGI,KAAK,CAACC,EAAE,GACrB,MAAMP,aAAa,CAACQ,GAAG,CAAC,WAAWF,KAAK,CAACC,EAAE,EAAE,EAAED,KAAK,CAAC,CAAC;EAAA,EACtD,MAAMN,aAAa,CAACS,IAAI,CAAC,SAAS,EAAEH,KAAK,CAAC,CAAC,CAAC;EAChD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMM,WAAW,GAAGX,gBAAgB,CAAC,oBAAoB,EAAE,MAAMQ,EAAE,IAAI;EAC5E,MAAMP,aAAa,CAACW,MAAM,CAAC,WAAWJ,EAAE,EAAE,CAAC;EAC3C,OAAOA,EAAE;AACX,CAAC,CAAC;AAEF,MAAMK,WAAW,GAAGd,WAAW,CAAC;EAC9Be,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,KAAK;IACdC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAEC,OAAO,IAAI;IACxBA,OAAO,CACJC,OAAO,CAACpB,WAAW,CAACqB,OAAO,EAAEC,KAAK,IAAI;MACrCA,KAAK,CAACP,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC,CACDK,OAAO,CAACpB,WAAW,CAACuB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACR,MAAM,GAAGU,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDL,OAAO,CAACpB,WAAW,CAAC0B,QAAQ,EAAE,CAACJ,KAAK,EAAEE,MAAM,KAAK;MAChDF,KAAK,CAACP,OAAO,GAAG,KAAK;MACrBO,KAAK,CAACN,KAAK,GAAGQ,MAAM,CAACR,KAAK,CAACW,OAAO;IACpC,CAAC,CAAC,CACDP,OAAO,CAAChB,SAAS,CAACmB,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MAC/C,MAAMI,aAAa,GAAGN,KAAK,CAACR,MAAM,CAACe,SAAS,CAC1CC,CAAC,IAAIA,CAAC,CAACxB,EAAE,KAAKkB,MAAM,CAACC,OAAO,CAACnB,EAC/B,CAAC;MACD,IAAIsB,aAAa,KAAK,CAAC,CAAC,EAAE;QACxBN,KAAK,CAACR,MAAM,CAACc,aAAa,CAAC,GAAGJ,MAAM,CAACC,OAAO;MAC9C,CAAC,MAAM;QACLH,KAAK,CAACR,MAAM,CAACiB,IAAI,CAACP,MAAM,CAACC,OAAO,CAAC;MACnC;IACF,CAAC,CAAC,CACDL,OAAO,CAACX,WAAW,CAACc,SAAS,EAAE,CAACD,KAAK,EAAEE,MAAM,KAAK;MACjDF,KAAK,CAACR,MAAM,GAAGQ,KAAK,CAACR,MAAM,CAACkB,MAAM,CAACF,CAAC,IAAIA,CAAC,CAACxB,EAAE,KAAKkB,MAAM,CAACC,OAAO,CAAC;IAClE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAed,WAAW,CAACsB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}