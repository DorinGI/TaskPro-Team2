{"ast":null,"code":"var _jsxFileName = \"C:\\\\TaskPro-Team2\\\\Frontend\\\\src\\\\components\\\\MainDashboard\\\\MainDashboard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ColumnTask from '../ColumnTask/ColumnTask.jsx';\nimport styles from './MainDashboard.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainDashboard = () => {\n  _s();\n  const [columns, setColumns] = useState([{\n    id: 1,\n    title: 'To Do',\n    cards: []\n  }, {\n    id: 2,\n    title: 'In Progress',\n    cards: []\n  }, {\n    id: 3,\n    title: 'Done',\n    cards: []\n  }]);\n  const addColumn = () => {\n    const newColumnId = columns.length + 1;\n    setColumns([...columns, {\n      id: newColumnId,\n      title: `Column ${newColumnId}`,\n      cards: []\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.mainDashboard,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: styles.addColumnButton,\n      onClick: addColumn,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.plusIcon,\n        src: `${process.env.PUBLIC_URL}/assets/plus.svg`,\n        alt: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), \"Add another Column\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.columnContainer,\n      children: columns.map(column => /*#__PURE__*/_jsxDEV(ColumnTask, {\n        item: column\n      }, column.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(MainDashboard, \"yHj6Bvo1ntrp7Gf2dz3aJjj1lVM=\");\n_c = MainDashboard;\nexport default MainDashboard;\nvar _c;\n$RefreshReg$(_c, \"MainDashboard\");","map":{"version":3,"names":["React","useState","ColumnTask","styles","jsxDEV","_jsxDEV","MainDashboard","_s","columns","setColumns","id","title","cards","addColumn","newColumnId","length","className","mainDashboard","children","addColumnButton","onClick","plusIcon","src","process","env","PUBLIC_URL","alt","fileName","_jsxFileName","lineNumber","columnNumber","columnContainer","map","column","item","_c","$RefreshReg$"],"sources":["C:/TaskPro-Team2/Frontend/src/components/MainDashboard/MainDashboard.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ColumnTask from '../ColumnTask/ColumnTask.jsx';\r\nimport styles from './MainDashboard.module.css'; \r\n\r\nconst MainDashboard = () => {\r\n  const [columns, setColumns] = useState([\r\n    { id: 1, title: 'To Do', cards: [] },\r\n    { id: 2, title: 'In Progress', cards: [] },\r\n    { id: 3, title: 'Done', cards: [] },\r\n  ]);\r\n\r\n  const addColumn = () => {\r\n    const newColumnId = columns.length + 1;\r\n    setColumns([\r\n      ...columns,\r\n      { id: newColumnId, title: `Column ${newColumnId}`, cards: [] },\r\n    ]);\r\n  };\r\n\r\n  return (\r\n    <div className={styles.mainDashboard}>\r\n      {/* Add Column Button */}\r\n      <button className={styles.addColumnButton} onClick={addColumn}>\r\n        <img\r\n          className={styles.plusIcon}\r\n          src={`${process.env.PUBLIC_URL}/assets/plus.svg`}\r\n          alt=\"Add\"\r\n        />\r\n        Add another Column\r\n      </button>\r\n\r\n      {/* Column Container */}\r\n      <div className={styles.columnContainer}>\r\n        {columns.map((column) => (\r\n          <ColumnTask key={column.id} item={column} />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainDashboard;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,UAAU,MAAM,8BAA8B;AACrD,OAAOC,MAAM,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,CACrC;IAAES,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAG,CAAC,EACpC;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAE;EAAG,CAAC,EAC1C;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAG,CAAC,CACpC,CAAC;EAEF,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB,MAAMC,WAAW,GAAGN,OAAO,CAACO,MAAM,GAAG,CAAC;IACtCN,UAAU,CAAC,CACT,GAAGD,OAAO,EACV;MAAEE,EAAE,EAAEI,WAAW;MAAEH,KAAK,EAAE,UAAUG,WAAW,EAAE;MAAEF,KAAK,EAAE;IAAG,CAAC,CAC/D,CAAC;EACJ,CAAC;EAED,oBACEP,OAAA;IAAKW,SAAS,EAAEb,MAAM,CAACc,aAAc;IAAAC,QAAA,gBAEnCb,OAAA;MAAQW,SAAS,EAAEb,MAAM,CAACgB,eAAgB;MAACC,OAAO,EAAEP,SAAU;MAAAK,QAAA,gBAC5Db,OAAA;QACEW,SAAS,EAAEb,MAAM,CAACkB,QAAS;QAC3BC,GAAG,EAAE,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,kBAAmB;QACjDC,GAAG,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACV,CAAC,sBAEJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAGTzB,OAAA;MAAKW,SAAS,EAAEb,MAAM,CAAC4B,eAAgB;MAAAb,QAAA,EACpCV,OAAO,CAACwB,GAAG,CAAEC,MAAM,iBAClB5B,OAAA,CAACH,UAAU;QAAiBgC,IAAI,EAAED;MAAO,GAAxBA,MAAM,CAACvB,EAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CAC5C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAnCID,aAAa;AAAA6B,EAAA,GAAb7B,aAAa;AAqCnB,eAAeA,aAAa;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}